    <script type="text/javascript">

    	String.prototype.trim=function(){return this.replace(/^\s+|\s+$/g, '');};
        String.prototype.ltrim=function(){return this.replace(/^\s+/,'');};
        String.prototype.rtrim=function(){return this.replace(/\s+$/,'');};
        String.prototype.fulltrim=function(){return this.replace(/(?:(?:^|\n)\s+|\s+(?:$|\n))/g,'').replace(/\s+/g,' ');};

        var words = new Array();
        var audioSource = new Array();
        
        function getLanguageBrowser(){
            return window.navigator.userLanguage || window.navigator.language;
        }
        
        function gotSources(sourceInfos) {
            for (var i = 0; i != sourceInfos.length; ++i) {
                var sourceInfo = sourceInfos[i];
                if (sourceInfo.kind === 'audio') {
                    //alert(sourceInfo.id);
                    audioSource .push(sourceInfo.id);
                }else {
                    console.log('Some other kind of source: ', sourceInfo);
                }
            }
        }
        function successCallback(stream) {}
        function errorCallback(error){
            console.log("navigator.getUserMedia error: ", error);
        }

        function setupWebSpeechApi(){
            // Code from your microphone choose
            if (typeof MediaStreamTrack === 'undefined'){
                alert('This browser does not support MediaStreamTrack.\n\nTry Chrome Canary.');
            } else {
                MediaStreamTrack.getSources(gotSources);
            }
            var constraints = {
            audio: {
            optional: [{sourceId: audioSource[0]}]
                }
            };
            
            navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia;
            //navigator.getUserMedia(constraints, successCallback, errorCallback);
            
            // Start Web Speech Api
            var speech = new webkitSpeechRecognition();
            speech.continuous = true;
            speech.interimResults = false;
            speech.lang = "en-US";

            speech.onresult = function (event)
            {
                var lastword = event.results[event.results.length-1][0].transcript;
                words.push(lastword);
                checkWord(lastword);
            }
            speech.onend = function ()
            {
                console.log("Fin speech");
            }
            speech.start();
        }
        
        function checkWord(word){     
            if(word=="send"){
                var wish = "";
                for(i=0;i<words.length-1;i++) wish +=words[i];
                addToWall(wish);
                words = new Array();
            }else{
                addToPreview(word);
                waitingWords = "";
            }
        }
        
        function addToPreview(word){
            var textArea = document.getElementById("textAreaPreview");
            textArea.innerHTML += word;
        }
        function addToWall(sentence){
            var textArea = document.getElementById("textAreaWall");
            textArea.innerHTML += sentence;
        }
        setupWebSpeechApi();
        
        var source;
        var context = new webkitAudioContext();
        var levels = context.createJavaScriptNode(2048, 1, 1);
        var analyser = context.createAnalyser();

        analyser.smoothingTimeConstant = 0.3;
        analyser.fftSize = 1024;

        levels.onaudioprocess = function (e) {
            var array = new Uint8Array(analyser.frequencyBinCount);
            analyser.getByteFrequencyData(array);
            var average = getAverageVolume(array);
            document.getElementById('levels').innerHTML = 'Levels for input: '+average;
        };

        function getAverageVolume(array) {
            var values = 0;
            var average;
            var length = array.length;
            for (var i = 0; i < length; i++) {
                values += array[i];
            }
            average = values/length;
            return average;
        }

        navigator.webkitGetUserMedia({
            audio: true
            }, function (stream) {
            source = context.createMediaStreamSource(stream);
            levels.connect(context.destination);
            source.connect(analyser);
            analyser.connect(levels);
        });

        function sendWishToServer(){
            textWish = $("#textAreaPreview").html();
            //alert(textWish);
            $.post( "/wish/new", { txt: textWish})
            .done(function( data ) {
                alert( "Data Loaded: ");
            });
        }

    </script>

    <textarea id="textAreaPreview" style="width: 400px"></textarea>
    <textarea id="textAreaWall" style="width: 400px"></textarea>
    <p id="levels">Levels appear here</p>

    <a href="javascript:sendWishToServer();">Send wish</a>
</form>
